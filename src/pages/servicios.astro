---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const services = await getCollection("services");
---

<Layout title="VetClinic - Servicios">
  <!-- Header Section con efecto cursor -->
  <section
    class="hero-section relative min-h-[60vh] flex items-center justify-center overflow-hidden"
  >
    <div
      class="hero-bg absolute inset-0 bg-gradient-to-br from-[#0f172a] via-[#1e293b] to-[#334155]"
    >
    </div>

    <div class="relative z-10 text-center px-4">
      <h1
        class="hero-title text-6xl md:text-8xl font-black text-white mb-6 tracking-wider"
      >
        <span
          class="bg-gradient-to-r from-emerald-400 via-cyan-400 to-purple-400 bg-clip-text text-transparent"
        >
          SERVICIOS
        </span>
      </h1>
      <p class="text-xl text-gray-300 max-w-2xl mx-auto">
        Tecnolog√≠a avanzada y cuidado personalizado para tu mascota
      </p>
    </div>

    <!-- Elementos animados con cursor -->
    <div
      class="floating-orb absolute w-96 h-96 bg-emerald-500/10 rounded-full blur-3xl"
    >
    </div>
    <div
      class="floating-orb-2 absolute w-72 h-72 bg-cyan-500/10 rounded-full blur-3xl"
    >
    </div>
  </section>

  <!-- Services Grid -->
  <section class="py-16 px-4">
    <div
      class="max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
    >
      {
        services.map((service, index) => {
          const { slug, data } = service;
          const { title, description, img } = data;

          return (
            <article class="group bg-gray-800/70 backdrop-blur-sm rounded-xl overflow-hidden border border-gray-700 hover:border-emerald-500 transition-all duration-300 flex flex-col h-full">
              {img && (
                <div class="relative h-48 overflow-hidden">
                  <img
                    transition:name={`img-${slug}`}
                    src={`/img/${img}`}
                    alt={title}
                    class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-700"
                  />
                  <div class="absolute top-3 left-3 bg-emerald-500 text-white px-2 py-1 rounded-full text-xs font-bold">
                    {String(index + 1).padStart(2, "0")}
                  </div>
                </div>
              )}

              <div class="p-6 flex flex-col flex-grow">
                <h3 class="text-xl font-bold text-white mb-3 group-hover:text-emerald-400 transition-colors">
                  {title.replace(/^\d+-\s*/, "")}
                </h3>
                <p class="text-gray-300 mb-4 text-sm line-clamp-3 flex-grow">
                  {description}
                </p>
                <a
                  href={`/servicios/${slug}`}
                  class="inline-flex items-center bg-gradient-to-r from-emerald-600 to-cyan-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:from-emerald-500 hover:to-cyan-500 transition-all duration-300 hover:-translate-y-1 hover:shadow-lg mt-auto w-40"
                >
                  Ver detalles
                  <svg
                    class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 5l7 7-7 7"
                    />
                  </svg>
                </a>
              </div>
            </article>
          );
        })
      }
    </div>
  </section>
</Layout>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Limelight&display=swap');

  .hero-title {
    font-family: "Limelight", sans-serif;
    text-shadow: 0 0 30px rgba(16, 185, 129, 0.3);
    animation: glow 2s ease-in-out infinite alternate;
  }

  @keyframes glow {
    from {
      text-shadow: 0 0 30px rgba(16, 185, 129, 0.3);
    }
    to {
      text-shadow:
        0 0 50px rgba(16, 185, 129, 0.6),
        0 0 70px rgba(6, 182, 212, 0.4);
    }
  }

  .hero-section:hover .floating-orb {
    animation: float 3s ease-in-out infinite;
  }

  .hero-section:hover .floating-orb-2 {
    animation: float 3s ease-in-out infinite reverse;
  }

  @keyframes float {
    0%,
    100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-20px) rotate(10deg);
    }
  }

  .floating-orb {
    top: 10%;
    left: 10%;
    transition: all 0.3s ease;
  }

  .floating-orb-2 {
    bottom: 10%;
    right: 10%;
    transition: all 0.3s ease;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const heroSection = document.querySelector(".hero-section");
    const orb1 = document.querySelector(".floating-orb");
    const orb2 = document.querySelector(".floating-orb-2");

    heroSection.addEventListener("mousemove", (e) => {
      const rect = heroSection.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;

      const moveX1 = (x / rect.width - 0.5) * 30;
      const moveY1 = (y / rect.height - 0.5) * 30;
      const moveX2 = (x / rect.width - 0.5) * -20;
      const moveY2 = (y / rect.height - 0.5) * -20;

      orb1.style.transform = `translate(${moveX1}px, ${moveY1}px)`;
      orb2.style.transform = `translate(${moveX2}px, ${moveY2}px)`;
    });

    heroSection.addEventListener("mouseleave", () => {
      orb1.style.transform = "translate(0, 0)";
      orb2.style.transform = "translate(0, 0)";
    });
  });
</script>
